#!/usr/bin/env ruby

require_relative "../esf_script"

class ResetDiplomacyPartial < EsfScript
  def call
    factions = []
    each_faction do |faction, faction_name|
      diplomacy_include = faction.xpath("xml_include").map{|xi| xi["path"]}.grep(/\Adiplomacy/)[0]
      next unless diplomacy_include
      path = "#{@xmldir}/#{diplomacy_include}"
      update_xml(path, "//rec[@type='DIPLOMACY_RELATIONSHIP']") do |dr|
        second_faction_id = dr.xpath("i")[0].content
        second_faction_name = faction_ids[second_faction_id]
        reset_diplomacy(faction_name, second_faction_name, dr)
        true
      end
      # Last step to remove protectorate status
      faction.xpath("i")[5].content = "0"
      true
    end
  end

  def reset_diplomacy(faction1, faction2, dr)
    # Do not reset trade, as it leaves half-working trade routes
    return if !([faction1, faction2] & ["pirates"]).empty?
    dr.xpath("*/draa").each_with_index do |draa, i|
      # 2 alliance broken
      # 3 alliances not honored
      # 12 territorial expansion
      # 14 assassinations
      # 15 religion
      # 16 government
      # 17 historical
      # 18 sabotage
      # 19 espionage
      # 20 threats
      next unless [2, 3, 12, 14, 15, 16, 17, 18, 19, 20].include?(i)
      draa.attributes.each do |name, attr|
        attr.remove
      end
    end
  end
end

ResetDiplomacyPartial.new
