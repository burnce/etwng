#!/usr/bin/env ruby

require_relative "../esf_script"

class RemoveAllFortifications < EsfScript
  def call
    buildings_to_remove = [
      'settlement_fortifications', 'improved_settlement_fortifications'
    ]

    update_each_xml("region*/*.xml", "//rec[@type='BUILDING_MANAGER']") do |bm|
      updated = false
      is_present, *parts = bm.xpath("*")
      # Remove existing fortifications
      if is_present.name == 'yes'
        building = parts.shift
        if building.name == 'building'
          if buildings_to_remove.include?(building['name'])
            is_present.name = 'no'
            building.remove
            updated = true
          end
        end
      end

      # Remove fortifications in progress
      is_constructing = parts.shift
      if is_constructing.name == 'yes'
        construction = parts.shift
        # It will be missing if it's a repair
        updating_to = construction.xpath('s')[0]
        type = updating_to && updating_to.text
        if buildings_to_remove.include?(type)
          is_constructing.name = 'no'
          construction.remove
          updated = true
        end
      end

      updated
    end
  end
end

RemoveAllFortifications.new
